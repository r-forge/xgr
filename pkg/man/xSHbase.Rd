% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xSHbase.r
\name{xSHbase}
\alias{xSHbase}
\title{Function to visualise bases partitioned from a supra-hexagonal grid using ggplot2}
\usage{
xSHbase(sMap, sBase, colormap = "rainbow_hcl", border.color = "grey",
legend.title = "", legend.text.size = 6, legend.title.size = 8,
boundary = F, boundary.color = "black", boundary.type = c("line",
"point"))
}
\arguments{
\item{sMap}{an object of class "sMap"}

\item{sBase}{an object of class "sBase". It can be an integer vector
specifying clusters}

\item{colormap}{short name for the colormap. It can be one of "jet"
(jet colormap), "bwr" (blue-white-red colormap), "gbr" (green-black-red
colormap), "wyr" (white-yellow-red colormap), "br" (black-red
colormap), "yr" (yellow-red colormap), "wb" (white-black colormap), and
"rainbow" (rainbow colormap, that is,
red-yellow-green-cyan-blue-magenta). Alternatively, any
hyphen-separated HTML color names, e.g. "blue-black-yellow",
"royalblue-white-sandybrown", "darkgreen-white-darkviolet". A list of
standard color names can be found in
\url{http://html-color-codes.info/color-names}}

\item{border.color}{the border color for each hexagon}

\item{legend.title}{the title of the colorbar. By default, it is ''}

\item{legend.text.size}{the text size of the legend tick labelings}

\item{legend.title.size}{the text size of the legend titles}

\item{boundary}{logical to indicate whether the base boundary is added}

\item{boundary.color}{the boundary color for each base}

\item{boundary.type}{the type of boundary. It can be 'line' (polygon;
likely problematic due to the ordering issue), 'point' (simply dots)}
}
\value{
a ggplot2 object
}
\description{
\code{xSHbase} is supposed to visualise bases partitioned from a
supra-hexagonal grid using ggplot2.
}
\note{
Illustrator: cut a shape of points into each segmented line: 1) select
the shape; 2) Direct Select Tool (A); 3) hold Shift and select an
anchor point; 4) select Cut path of selected anchor points in the
Anchor Point toolbar (The icon with the segmented line and scissors).
}
\examples{
\dontrun{
library(XGR)

gp <- xSHbase(sMap, sBase)
gp + theme(legend.position="none")

## advanced use
# steps to the centroid
df <- unique(sMap$polygon[,c("index","stepCentroid")]) \%>\%
dplyr::arrange(index)
gp <- xSHbase(sMap, df$stepCentroid, legend.title='Steps')
# further labelled by hits
df_coord <- data.frame(sMap$coord, hits=sMap$hits, stringsAsFactors=F)
gp + geom_text(data=df_coord, aes(x,y,label=hits))

# angles to the centroid
df <- unique(sMap$polygon[,c("index","angleCentroid")]) \%>\%
dplyr::arrange(index)
vec <- ceiling(180*(df$angleCentroid/3.14))
gp <- xSHbase(sMap, vec, legend.title='Angles')

# add boundary
gp <- xSHbase(sMap, sBase, boundary=T, colormap="rainbow_hcl")
gp <- xSHbase(sMap, sBase, boundary=T,
colormap="transparent-transparent")
gp + theme(legend.position="none")

# interactive (ggiraph)
df_polygon <- sMap$polygon
df_polygon$onclick <- 'alert(this.getAttribute("data-id"))'
df_polygon$onclick <-
paste0('window.open("https://en.wikipedia.org/wiki/',
df_polygon$stepCentroid,'")')
gg <- ggplot(df_polygon, aes(x, y)) +
ggiraph::geom_polygon_interactive(aes(fill=index, group=index,
tooltip=stepCentroid, data_id=stepCentroid, onclick=onclick)) +
coord_fixed(ratio=1) + theme_void()
gr <- ggiraph::ggiraph(code=print(gg), width_svg=6, height_svg=6)
ggiraph::girafe_options(gr, ggiraph::opts_tooltip(use_fill=T),
ggiraph::opts_hover(css="fill:orange"),
ggiraph::opts_toolbar(position="topright"))
}
}
\seealso{
\code{\link{xSHbase}}
}
